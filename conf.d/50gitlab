#!/bin/bash -ex

source /usr/local/src/gitlab.conf
[ "$FAB_HTTP_PROXY" ] && export HTTP_PROXY=$FAB_HTTP_PROXY

URL="https://gitlab.com/gitlab-org/gitlab-ce.git"
exec_git "git clone --branch ${VERSION_GITLAB} --depth=1 $URL $GIT_HOME/gitlab"

cd $GIT_HOME/gitlab

# configure settings

# GitLab config is contained within the overlay.
# It is generated from the example config and some minor
# adjustments made, plus a couple of placeholders (signified by
# '%%VAR_NAME`).
#
# To re-generate updated config:
#
#     grep -v '^[[:space:]]*#' $GITLAB_CONF.example > gitlab.yml
#
# Then make relevant adjustments and add placeholders.
#
# One important (manual) inclusion required for initial install is the
# 'ssh_port: 22' line within the 'gitlab_shell:' section.

GITLAB_CONF=$GIT_HOME/gitlab/config/gitlab.yml
mv $SRC/gitlab.yml $GITLAB_CONF
chown $GIT_USER:$GIT_USER $GITLAB_CONF

exec_git "sed -i \"s|%%DOMAIN|$DOMAIN|\" $GITLAB_CONF"
exec_git "sed -i \"s|%%ADMIN_MAIL|$ADMIN_MAIL|\" $GITLAB_CONF"

exec_git "cat >$GIT_HOME/gitlab/config/database.yml<<EOF
production:
  adapter: mysql2
  encoding: utf8mb4
  collation: utf8mb4_general_ci
  reconnect: false
  database: $DB_NAME
  username: $DB_USER
  password: $DB_PASS
  pool: 5

EOF"
chmod 640 $GIT_HOME/gitlab/config/database.yml

exec_git "cat >$GIT_HOME/gitlab/db/fixtures/production/001_admin.rb<<EOF
admin = User.create(
  :email => \"$ADMIN_MAIL\",
  :name => \"Administrator\",
  :username => \"gitlab-admin\",
  :password => \"$ADMIN_PASS\",
  :password_confirmation => \"$ADMIN_PASS\"
)

admin.projects_limit = 10000
admin.admin = true
admin.confirmed_at = admin.confirmation_sent_at
admin.save!

EOF"

exec_git "cat >>$GIT_HOME/gitlab/app/views/layouts/application.html.haml<<EOF
<div id='turnkey-credit' style='font-size:10px;text-align:center;padding-top:20px'><a href='https://www.turnkeylinux.org/gitlab'>GitLab Appliance</a> - Powered by <a href='https://www.turnkeylinux.org'>TurnKey Linux</a></div>
EOF"


# fetch and compile gitlab-workhorse
URL_WORKHORSE="https://gitlab.com/gitlab-org/gitlab-workhorse"
exec_git "git clone $URL_WORKHORSE $GIT_HOME/gitlab-workhorse"
exec_git "make -C $GIT_HOME/gitlab-workhorse"


# set permissions
chown -R $GIT_USER $GIT_HOME/gitlab/log
chown -R $GIT_USER $GIT_HOME/gitlab/tmp
chmod -R u+rwX $GIT_HOME/gitlab/log
chmod -R u+rwX $GIT_HOME/gitlab/tmp

chmod -R u+rwX $GIT_HOME/gitlab/tmp/pids/
chmod -R u+rwX $GIT_HOME/gitlab/tmp/sockets/

exec_git "mkdir $GIT_HOME/gitlab/public/uploads"
chmod 0700 $GIT_HOME/gitlab/public/uploads
chown $GIT_USER $GIT_HOME/gitlab/public

mkdir -p $GIT_HOME/repositories
chown -R $GIT_USER $GIT_HOME/repositories
chmod -R ug+rwX,o-rwx $GIT_HOME/repositories
chmod -R ug-s $GIT_HOME/repositories
find $GIT_HOME/repositories -type d -print0 | xargs -0 chmod g+s


# rack attack config
cp $GIT_HOME/gitlab/config/initializers/rack_attack.rb.example $GIT_HOME/gitlab/config/initializers/rack_attack.rb

# recommended in installation guide
ln -s /usr/bin/python /usr/local/bin/python2

# temporarily change ssh port as to not conflict with build system
sed -i "s|Port 22|Port 2222|" /etc/ssh/sshd_config
sed -i "s|Port 22|Port 2222|" $GIT_HOME/.ssh/config
sed -i "s|ssh_port: 22|ssh_port: 2222|" $GIT_HOME/gitlab/config/gitlab.yml

# install
cd $GIT_HOME/gitlab
exec_git "bundle install -j$(nproc) --deployment --without development test postgres aws kerberos"

service ssh start
service redis-server start
exec_git 'bundle exec rake gitlab:shell:install REDIS_URL=unix:/var/run/redis/redis.sock RAILS_ENV=production SKIP_STORAGE_VALIDATION=true'
exec_git 'bundle exec rake gitlab:workhorse:install[/home/git/gitlab-workhorse] RAILS_ENV=production'
exec_git 'bundle exec rake gitlab:gitaly:install[/home/git/gitaly] RAILS_ENV=production'

cat << EOF >> /home/git/gitaly/config.toml
socket_path = "/home/git/gitlab/tmp/sockets/private/gitaly.socket"
bin_dir = "/home/git/gitaly"
prometheus_listen_addr = ":9236"

[[storage]]
path = "/home/git/repositories"
name = "repositories"
EOF

exec_git 'nohup /home/git/gitaly/gitaly /home/git/gitaly/config.toml & echo $! > /tmp/gitaly.pid'
exec_git 'bundle exec rake --trace gitlab:setup RAILS_ENV=production force=yes'
exec_git 'bundle exec rake sidekiq:start RAILS_ENV=production'
exec_git 'bundle exec rake gitlab:env:info RAILS_ENV=production'
exec_git 'bundle exec rake gitlab:check RAILS_ENV=production'

kill $( cat /tmp/gitaly.pid)
rm /tmp/gitaly.pid

# stop running services
service ssh stop
service mysql stop

unset HTTP_PROXY

# change ssh port configuration back
sed -i "s|Port 2222|Port 22|" /etc/ssh/sshd_config
sed -i "s|ssh_port: 2222|ssh_port: 22|" $GIT_HOME/gitlab/config/gitlab.yml
rm $GIT_HOME/.ssh/config

# set permissions
chmod 0700 $GIT_HOME/gitlab/tmp/sockets/private
chown git $GIT_HOME/gitlab/tmp/sockets/private

chmod -R ug+rwX,o-rwx $GIT_HOME/repositories
chmod -R ug-s $GIT_HOME/repositories
find $GIT_HOME/repositories -type d -print0 | xargs -0 chmod g+s

service redis-server stop
